import paramiko

def open_ssh_connection(hostname, port, username, password):
    # Create an SSH client
    ssh_client = paramiko.SSHClient()

    # Automatically add the server's host key (this is insecure, see the warnings in the Paramiko documentation)
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        # Connect to the SSH server
        ssh_client.connect(hostname, port=port, username=username, password=password)
        print("SSH connection established successfully.")
        return ssh_client
    except Exception as e:
        print(f"Error: {e}")
        return None

def sftp_transfer(ssh_client, local_path, remote_path, operation='put'):
    # Create an SFTP client
    sftp_client = ssh_client.open_sftp()

    try:
        if operation.lower() == 'put':
            # Upload a file to the remote server
            sftp_client.put(local_path, remote_path)
            print(f"File '{local_path}' uploaded to '{remote_path}' successfully.")
        elif operation.lower() == 'get':
            # Download a file from the remote server
            sftp_client.get(remote_path, local_path)
            print(f"File '{remote_path}' downloaded to '{local_path}' successfully.")
        else:
            print("Invalid operation. Use 'put' or 'get'.")
    except Exception as e:
        print(f"SFTP Error: {e}")
    finally:
        # Close the SFTP session
        sftp_client.close()

def close_ssh_connection(ssh_client):
    # Close the SSH connection
    ssh_client.close()
    print("SSH connection closed.")

# Example usage
hostname = 'your_ssh_server_hostname'
port = 22  # Default SSH port
username = 'your_ssh_username'
password = 'your_ssh_password'
local_file_path = 'path/to/local/file.txt'
remote_file_path = 'path/to/remote/file.txt'

# Open SSH connection
ssh_client = open_ssh_connection(hostname, port, username, password)

if ssh_client:
    # Perform SFTP (upload file)
    sftp_transfer(ssh_client, local_file_path, remote_file_path, operation='put')

    # Perform SFTP (download file)
    # sftp_transfer(ssh_client, local_file_path, remote_file_path, operation='get')

    # Close SSH connection
    close_ssh_connection(ssh_client)
